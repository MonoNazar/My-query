CREATE TABLE Customers
(
    Id SERIAL PRIMARY KEY,
    FirstName CHARACTER VARYING(30),
    LastName CHARACTER VARYING(30),
    Email CHARACTER VARYING(30),
    Age INTEGER
);

ALTER TABLE Customers
RENAME COLUMN email TO gmail;

INSERT INTO Customers (FirstName, LastName, Gmail, Age) 
VALUES 
('Назар', 'Тарасов', 14000, 18),
('Роман', 'Лесів', 14560, 28),
('Назар', 'Савченко', 11200, 12),
('Тарас', 'Шевченко', 10000, 42);

SELECT * FROM Customers

SELECT FirstName, LastName FROM CUSTOMERS

SELECT * FROM Customers
WHERE FirstName = 'Назар' or Age > 30;

UPDATE Customers
SET Age = Age - 3
WHERE Age > 20

DELETE FROM Customers
WHERE FirstName = 'Назар';

INSERT INTO Customers (FirstName, LastName, Gmail, Age) 
VALUES 
('Назар', 'Тарасов', 14000, 18),
('Віталй', 'Лесів', 16333, 29),
('Назар', 'Савченко', 11200, 12),
('Андрій', 'Винник', 10300, 41);

SELECT DISTINCT FirstName, LastName FROM Customers;

SELECT * FROM Customers
ORDER BY Gmail DESC
LIMIT 3 OFFSET 2;

SELECT * FROM Customers
WHERE Gmail LIKE '14%';

CREATE TABLE Orders
(
    Id SERIAL PRIMARY KEY,
    CustomerId INTEGER,
    Price INTEGER,
	Models CHARACTER VARYING(30),
    FOREIGN KEY (CustomerId) REFERENCES Customers (Id) ON DELETE CASCADE
);

ALTER TABLE Orders
ADD COLUMN Count INTEGER;

INSERT INTO Orders (CustomerId, Price, Models, count) 
VALUES 
(2, 176, 'x', 5),
(5, 160, 's', 7),
(2, 120, 'l', 3),
(8, 100, 'm', 6);

DELETE FROM Customers
WHERE FirstName = 'Андрій';

SELECT * FROM Orders

SELECT * FROM Customers

SELECT AVG(Price) AS Average_Price FROM Orders;

SELECT LastName, COUNT(*) FROM Customers
GROUP BY LastName;

SELECT Customers.FirstName, Orders.Model 
FROM Orders
JOIN Customers ON Customers.Id = Orders.Customers.Id

DROP TABLE Customers

DROP TABLE Orders

CREATE TABLE Products
(
    Id SERIAL PRIMARY KEY,
    ProductName VARCHAR(30) NOT NULL,
    Company VARCHAR(20) NOT NULL,
    ProductCount INTEGER DEFAULT 0,
    Price NUMERIC NOT NULL
);
CREATE TABLE Customers
(
    Id SERIAL PRIMARY KEY,
    FirstName VARCHAR(30) NOT NULL
);
CREATE TABLE Orders
(
    Id SERIAL PRIMARY KEY,
    ProductId INTEGER NOT NULL REFERENCES Products(Id) ON DELETE CASCADE,
    CustomerId INTEGER NOT NULL REFERENCES Customers(Id) ON DELETE CASCADE,
    CreatedAt DATE NOT NULL,
    ProductCount INTEGER DEFAULT 1,
    Price NUMERIC NOT NULL
);

INSERT INTO Products(ProductName, Company, ProductCount, Price) 
VALUES ('iPhone X', 'Apple', 2, 66000),
('iPhone 8', 'Apple', 2, 51000),
('iPhone 7', 'Apple', 5, 42000),
('Galaxy S9', 'Samsung', 2, 56000),
('Galaxy S8 Plus', 'Samsung', 1, 46000),
('Nokia 9', 'HDM Global', 2, 26000),
('Desire 12', 'HTC', 6, 38000);
  
INSERT INTO Customers(FirstName) 
VALUES ('Tom'), ('Bob'),('Sam');
  
INSERT INTO Orders(ProductId, CustomerId, CreatedAt, ProductCount, Price) 
VALUES
( 
    (SELECT Id FROM Products WHERE ProductName='Galaxy S9'), 
    (SELECT Id FROM Customers WHERE FirstName='Tom'),
    '2017-07-11',  2, 
    (SELECT Price FROM Products WHERE ProductName='Galaxy S9')
),
( 
    (SELECT Id FROM Products WHERE ProductName='iPhone 8'), 
    (SELECT Id FROM Customers WHERE FirstName='Tom'),
    '2017-07-13',  1, 
    (SELECT Price FROM Products WHERE ProductName='iPhone 8')
),
( 
    (SELECT Id FROM Products WHERE ProductName='iPhone 8'), 
    (SELECT Id FROM Customers WHERE FirstName='Bob'),
    '2017-07-11',  1, 
    (SELECT Price FROM Products WHERE ProductName='iPhone 8')
);

SELECT * FROM Customers

SELECT Customers.FirstName, Orders.CreatedAt, Orders.ProductCount, Orders.Price 
FROM Customers LEFT JOIN Orders 
ON Orders.CustomerId = Customers.Id;

SELECT Customers.FirstName, Orders.CreatedAt, Orders.ProductCount, Orders.Price 
FROM Customers  JOIN Orders 
ON Orders.CustomerId = Customers.Id;

SELECT Products.ProductName, Customers.FirstName,	
	   Orders.CreatedAt, Products.ProductCount
FROM Orders 
LEFT JOIN Customers ON Orders.CustomerId = Customers.Id
RIGHT JOIN Products ON Orders.ProductId = Products.Id
ORDER BY Products.ProductName;

SELECT Products.ProductName, Customers.FirstName,	
	   Orders.CreatedAt, Products.ProductCount
FROM Orders 
RIGHT JOIN Customers ON Orders.CustomerId = Customers.Id
JOIN Products ON Orders.ProductId = Products.Id
ORDER BY Products.ProductCount DESC

SELECT Products.ProductName, Customers.FirstName,	
	   Orders.CreatedAt, Products.ProductCount
FROM Orders 
RIGHT JOIN Customers ON Orders.CustomerId = Customers.Id
LEFT JOIN Products ON Orders.ProductId = Products.Id
ORDER BY Products.ProductCount DESC




